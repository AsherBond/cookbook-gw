table filter {
    chain INPUT {
	policy DROP;

	# connection tracking
	mod state state INVALID DROP;
	mod state state (ESTABLISHED RELATED) ACCEPT;

	# allow local packet
	interface lo ACCEPT;

	# respond to ping
	proto icmp ACCEPT;

	# allow IPsec
	proto udp dport 500 ACCEPT;
	proto (esp ah) ACCEPT;

	# allow SSH connections
	proto tcp dport ssh ACCEPT;

	# allow OpenVPN
	proto udp dport 1194 ACCEPT;
    }
    chain OUTPUT {
	policy ACCEPT;

	# connection tracking
	#mod state state INVALID DROP;
	mod state state (ESTABLISHED RELATED) ACCEPT;
    }
    chain FORWARD {
	policy DROP;

	# connection tracking
	mod state state INVALID DROP;
	mod state state (ESTABLISHED RELATED) ACCEPT;

	# allow outgoing
	interface vlan214 outerface eth1 saddr 10.214.128.0/20 proto (udp tcp) ACCEPT;
	interface vlan214 outerface eth1 saddr 10.214.128.0/20 proto icmp icmp-type echo-request ACCEPT;

	# for traffic decapsulated from VPN
	## front
	interface tun+ outerface vlan214 saddr 10.99.118.0/24 proto (udp tcp) ACCEPT;
	interface tun+ outerface vlan214 saddr 10.99.118.0/24 proto icmp icmp-type echo-request ACCEPT;
	## ipmi
	interface tun+ outerface vlan414 saddr 10.99.118.0/24 proto (udp tcp) ACCEPT;
	interface tun+ outerface vlan414 saddr 10.99.118.0/24 proto icmp icmp-type echo-request ACCEPT;
    }
}

table nat {
    chain hide {
        # avoid the dynamic port range (see ip_local_port_range,
        # ip_local_reserved_ports sysctls)
        proto (tcp udp) SNAT to 64.90.32.34:20000-30000 random;
	proto icmp icmp-type echo-request SNAT to 64.90.32.34;
    }

    chain POSTROUTING {
        outerface ! eth1 RETURN;
	saddr 10.214.128.0/20 jump hide;
    }
}

# IPv6:
#domain ip6 {
#    table filter {
#        chain INPUT {
#            policy ACCEPT;
#            # ...
#        }
#        # ...
#    }
#}
